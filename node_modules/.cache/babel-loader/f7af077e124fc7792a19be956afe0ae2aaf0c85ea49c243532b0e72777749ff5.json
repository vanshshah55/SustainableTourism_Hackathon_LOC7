{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\temp\\\\my-react-app\\\\src\\\\pages\\\\accessibility\\\\WeatherGuide.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherGuide = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [destination, setDestination] = useState('Delhi'); // Default destination\n  const [summary, setSummary] = useState('');\n  const destinations = {\n    Delhi: {\n      lat: 28.6139,\n      lon: 77.209\n    },\n    Mumbai: {\n      lat: 19.076,\n      lon: 72.8777\n    },\n    Bangalore: {\n      lat: 12.9716,\n      lon: 77.5946\n    },\n    Chennai: {\n      lat: 13.0827,\n      lon: 80.2707\n    },\n    Kolkata: {\n      lat: 22.5726,\n      lon: 88.3639\n    },\n    Hyderabad: {\n      lat: 17.385,\n      lon: 78.4867\n    },\n    Pune: {\n      lat: 18.5204,\n      lon: 73.8567\n    },\n    Jaipur: {\n      lat: 26.9124,\n      lon: 75.7873\n    },\n    Ahmedabad: {\n      lat: 23.0225,\n      lon: 72.5714\n    },\n    Surat: {\n      lat: 21.1702,\n      lon: 72.8311\n    },\n    Lucknow: {\n      lat: 26.8467,\n      lon: 80.9462\n    },\n    Kanpur: {\n      lat: 26.4499,\n      lon: 80.3319\n    },\n    Nagpur: {\n      lat: 21.1458,\n      lon: 79.0882\n    },\n    Indore: {\n      lat: 22.7196,\n      lon: 75.8577\n    },\n    Thane: {\n      lat: 19.2183,\n      lon: 72.9781\n    },\n    Bhopal: {\n      lat: 23.2599,\n      lon: 77.4126\n    },\n    Visakhapatnam: {\n      lat: 17.6868,\n      lon: 83.2185\n    },\n    Patna: {\n      lat: 25.5941,\n      lon: 85.1376\n    },\n    Vadodara: {\n      lat: 22.3072,\n      lon: 73.1812\n    },\n    Ghaziabad: {\n      lat: 28.6692,\n      lon: 77.4538\n    }\n  };\n  const {\n    lat,\n    lon\n  } = destinations[destination];\n  const apiUrl = `https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&daily=temperature_2m_max,temperature_2m_min,weathercode&timezone=Asia/Kolkata`;\n  useEffect(() => {\n    fetch(apiUrl).then(response => response.json()).then(data => {\n      setWeatherData(data);\n      generateSummary(data);\n    }).catch(error => console.error('Error fetching weather data:', error));\n  }, [destination]);\n  const generateSummary = data => {\n    if (!data || !data.daily || data.daily.temperature_2m_max.length === 0) {\n      setSummary('No weather data available.');\n      return;\n    }\n    const todayTempMax = data.daily.temperature_2m_max[0];\n    const todayTempMin = data.daily.temperature_2m_min[0];\n    const weatherDescription = data.daily.weathercode[0];\n    let travelRecommendation = 'It is a good time to travel.';\n    if (todayTempMax < 10 || todayTempMax > 35 || weatherDescription.includes('rain')) {\n      travelRecommendation = 'It might not be the best time to travel.';\n    }\n    setSummary(`The current temperature in ${destination} ranges from ${todayTempMin}°C to ${todayTempMax}°C. ${travelRecommendation}`);\n  };\n  const handleDestinationChange = event => {\n    setDestination(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-20 bg-neutral-900 min-h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto px-6 md:px-12 lg:px-16\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold text-white mb-4\",\n        children: \"Weather Guide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-400 text-lg mb-8\",\n        children: \"Check climate conditions for your destination.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"destination\",\n          className: \"text-white mr-4\",\n          children: \"Select Destination:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"destination\",\n          value: destination,\n          onChange: handleDestinationChange,\n          className: \"p-2 rounded bg-neutral-800 text-white\",\n          children: Object.keys(destinations).map(dest => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: dest,\n            children: dest\n          }, dest, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), weatherData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4\",\n          children: [\"Weather Forecast for \", destination]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mb-4\",\n          children: summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n          children: weatherData.daily.time.map((date, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-neutral-800 p-4 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-lg font-bold\",\n              children: new Date(date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-400\",\n              children: [\"Max Temp: \", weatherData.daily.temperature_2m_max[index], \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-400\",\n              children: [\"Min Temp: \", weatherData.daily.temperature_2m_min[index], \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-400\",\n        children: \"Loading weather data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherGuide, \"EjBe6tGYxhJjJkOA5ixBNv187EM=\");\n_c = WeatherGuide;\nexport default WeatherGuide;\nvar _c;\n$RefreshReg$(_c, \"WeatherGuide\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WeatherGuide","_s","weatherData","setWeatherData","destination","setDestination","summary","setSummary","destinations","Delhi","lat","lon","Mumbai","Bangalore","Chennai","Kolkata","Hyderabad","Pune","Jaipur","Ahmedabad","Surat","Lucknow","Kanpur","Nagpur","Indore","Thane","Bhopal","Visakhapatnam","Patna","Vadodara","Ghaziabad","apiUrl","fetch","then","response","json","data","generateSummary","catch","error","console","daily","temperature_2m_max","length","todayTempMax","todayTempMin","temperature_2m_min","weatherDescription","weathercode","travelRecommendation","includes","handleDestinationChange","event","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","Object","keys","map","dest","time","date","index","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/temp/my-react-app/src/pages/accessibility/WeatherGuide.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst WeatherGuide = () => {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [destination, setDestination] = useState('Delhi'); // Default destination\r\n  const [summary, setSummary] = useState('');\r\n\r\n  const destinations = {\r\n    Delhi: { lat: 28.6139, lon: 77.209 },\r\n    Mumbai: { lat: 19.076, lon: 72.8777 },\r\n    Bangalore: { lat: 12.9716, lon: 77.5946 },\r\n    Chennai: { lat: 13.0827, lon: 80.2707 },\r\n    Kolkata: { lat: 22.5726, lon: 88.3639 },\r\n    Hyderabad: { lat: 17.385, lon: 78.4867 },\r\n    Pune: { lat: 18.5204, lon: 73.8567 },\r\n    Jaipur: { lat: 26.9124, lon: 75.7873 },\r\n    Ahmedabad: { lat: 23.0225, lon: 72.5714 },\r\n    Surat: { lat: 21.1702, lon: 72.8311 },\r\n    Lucknow: { lat: 26.8467, lon: 80.9462 },\r\n    Kanpur: { lat: 26.4499, lon: 80.3319 },\r\n    Nagpur: { lat: 21.1458, lon: 79.0882 },\r\n    Indore: { lat: 22.7196, lon: 75.8577 },\r\n    Thane: { lat: 19.2183, lon: 72.9781 },\r\n    Bhopal: { lat: 23.2599, lon: 77.4126 },\r\n    Visakhapatnam: { lat: 17.6868, lon: 83.2185 },\r\n    Patna: { lat: 25.5941, lon: 85.1376 },\r\n    Vadodara: { lat: 22.3072, lon: 73.1812 },\r\n    Ghaziabad: { lat: 28.6692, lon: 77.4538 },\r\n  };\r\n\r\n  const { lat, lon } = destinations[destination];\r\n  const apiUrl = `https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&daily=temperature_2m_max,temperature_2m_min,weathercode&timezone=Asia/Kolkata`;\r\n\r\n  useEffect(() => {\r\n    fetch(apiUrl)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setWeatherData(data);\r\n        generateSummary(data);\r\n      })\r\n      .catch(error => console.error('Error fetching weather data:', error));\r\n  }, [destination]);\r\n\r\n  const generateSummary = (data) => {\r\n    if (!data || !data.daily || data.daily.temperature_2m_max.length === 0) {\r\n      setSummary('No weather data available.');\r\n      return;\r\n    }\r\n\r\n    const todayTempMax = data.daily.temperature_2m_max[0];\r\n    const todayTempMin = data.daily.temperature_2m_min[0];\r\n    const weatherDescription = data.daily.weathercode[0];\r\n\r\n    let travelRecommendation = 'It is a good time to travel.';\r\n    if (todayTempMax < 10 || todayTempMax > 35 || weatherDescription.includes('rain')) {\r\n      travelRecommendation = 'It might not be the best time to travel.';\r\n    }\r\n\r\n    setSummary(`The current temperature in ${destination} ranges from ${todayTempMin}°C to ${todayTempMax}°C. ${travelRecommendation}`);\r\n  };\r\n\r\n  const handleDestinationChange = (event) => {\r\n    setDestination(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"py-20 bg-neutral-900 min-h-screen\">\r\n      <div className=\"max-w-7xl mx-auto px-6 md:px-12 lg:px-16\">\r\n        <h1 className=\"text-4xl font-bold text-white mb-4\">Weather Guide</h1>\r\n        <p className=\"text-gray-400 text-lg mb-8\">Check climate conditions for your destination.</p>\r\n        <div className=\"mb-8\">\r\n          <label htmlFor=\"destination\" className=\"text-white mr-4\">Select Destination:</label>\r\n          <select id=\"destination\" value={destination} onChange={handleDestinationChange} className=\"p-2 rounded bg-neutral-800 text-white\">\r\n            {Object.keys(destinations).map((dest) => (\r\n              <option key={dest} value={dest}>{dest}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        {weatherData ? (\r\n          <div className=\"text-white\">\r\n            <h2 className=\"text-2xl font-bold mb-4\">Weather Forecast for {destination}</h2>\r\n            <p className=\"text-lg mb-4\">{summary}</p>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n              {weatherData.daily.time.map((date, index) => (\r\n                <div key={index} className=\"bg-neutral-800 p-4 rounded-lg\">\r\n                  <p className=\"text-lg font-bold\">{new Date(date).toLocaleDateString()}</p>\r\n                  <p className=\"text-gray-400\">Max Temp: {weatherData.daily.temperature_2m_max[index]}°C</p>\r\n                  <p className=\"text-gray-400\">Min Temp: {weatherData.daily.temperature_2m_min[index]}°C</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <p className=\"text-gray-400\">Loading weather data...</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherGuide;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}